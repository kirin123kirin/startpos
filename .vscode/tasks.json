{
  // Variable Example
  // ${workspaceFolder}	/home/your-username/your-project
  // ${workspaceFolderBasename}	your-project
  // ${file}	/home/your-username/your-project/folder/file.ext
  // ${relativeFile}	folder/file.ext
  // ${relativeFileDirname}	folder
  // ${fileBasename}	file.ext
  // ${fileBasenameNoExtension}	file
  // ${fileDirname}	/home/your-username/your-project/folder
  // ${fileExtname}	.ext
  // ${lineNumber}	VSCodeの編集画面で現在選択されている行番号
  // ${selectedText}	VSCodeの編集画面で現在選択されているテキスト
  // ${execPath}	実行中のVS Code実行可能ファイル「code.exe」のアドレス
  // ${env:xxxxxx} 環境変数
  // ${config:setting.jsonの値} vscode workspace等で設定した値の参照 例${config:python.pythonPath}
  // See https://go.microsoft.com/fwlink/?LinkId=733558
  // for the documentation about the tasks.json format
  "version": "2.0.0",
  "presentation": {
    "echo": true,
    "reveal": "always",
    "focus": false,
    "panel": "shared",
    "showReuseMessage": false,
    "clear": true
  },
  "options": {
    "cwd": "${workspaceFolder}"
  },
  "problemMatcher": [
    "$msCompile"
  ],
  "tasks": [
    {
      "type": "shell",
      "label": "CLEANUP",
      "group": "build",
      "command": "rm",
      "args": [
        "-rf",
        "build",
        "_skbuild",
        "_cmake_test_compile",
        "dist",
        "*.egg-info",
        "*CMakeFiles",
        ".cmake",
        "CMakeCache.txt",
        "build.ninja",
        "cmake_install.cmake",
        "compile_commands.json",
        "install_manifest.txt",
        "*.pdb",
        ".ninja*",
        ">nul",
        "2>&1",
        "||",
        "echo",
        "Complete cleanup.",
      ],
      "windows": {
        "command": "rd",
        "args": [
          "/s",
          "/q",
          "build",
          "_skbuild",
          "dist",
          "_cmake_test_compile",
          "*.egg-info",
          "*CMakeFiles",
          ".cmake",
          ">nul",
          "2>&1",
          "||",
          "del",
          "/s",
          "/f",
          "/q",
          "CMakeCache.txt",
          "build.ninja",
          "cmake_install.cmake",
          "compile_commands.json",
          "install_manifest.txt",
          "*.pdb",
          ".ninja*",
          ">nul",
          "2>&1",
          "||",
          "echo",
          "Complete cleanup.",
        ],
      },
    },
    {
      "type": "shell",
      "label": "pre_makedir",
      "command": "mkdir",
      "args": [
        "build",
        ">/dev/null",
        "2>&1",
        "||",
        "echo",
        "made build directory"
      ],
      "windows": {
        "args": [
          "build",
          ">nul",
          "2>&1",
          "||",
          "echo",
          "made build directory"
          // "chcp",
          // "65001",
        ],
      },
    },
    {
      "type": "shell",
      "label": "CMake Debug Build",
      "group": "build",
      "command": "cmake",
      "args": [
        "-G",
        "Ninja",
        "-S",
        "${fileDirname}",
        "-B",
        "${fileDirname}/build",
        "-DCMAKE_VERBOSE_MAKEFILE=1",
        "-DCMAKE_INSTALL_PREFIX=${fileDirname}/build/cmake-install",
        "-DCMAKE_BUILD_TYPE=Debug",
        "-DCMAKE_C_COMPILER=clang",
        "-DCMAKE_CXX_COMPILER=clang++",
        // "-DCMAKE_C_FLAGS=\"-g -O0\"",
        // "-DCMAKE_CXX_FLAGS=\"-g -O0\"",
        "-DCMAKE_C_FLAGS=\"-g -O0 -save-temps=obj\"",
        "-DCMAKE_CXX_FLAGS=\"-g -O0 -save-temps=obj\"",
        // "-DCMAKE_C_FLAGS=\"-g -O0 -S -masm=intel -save-temps=obj\"",
        // "-DCMAKE_CXX_FLAGS=\"-g -O0 -S -masm=intel -save-temps=obj\"",
        "-DCMAKE_FIND_DEBUG_MODE=1",
        "&&",
        "cmake",
        "--build",
        "${fileDirname}/build",
        "&&",
        "cmake",
        "--install",
        "${fileDirname}/build"
      ],
      "windows": {
        "options": {
          "shell": {
            "executable": "cmd.exe",
            "args": [
              "/d",
              "/c",
              "${workspaceFolder}\\.vscode\\bin\\vcvars64.bat",
              "&&"
            ]
          }
        }
      },
      "problemMatcher": {
        "owner": "$gcc",
        "fileLocation": "absolute",
        "pattern": {
          "regexp": "^(.*):(\\d+):(\\d+):\\s+(.*):\\s+(.*)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "endLine": 2,
          "endColumn": 3,
          "severity": 4,
          "message": 5
        }
      },
      "dependsOrder": "sequence",
      "dependsOn": [
        // "CLEANUP"
      ],
    },
    {
      "type": "shell",
      "label": "CMake Release Build",
      "group": "build",
      "command": "cmake",
      "args": [
        "-G",
        "Ninja",
        "-S",
        "${fileDirname}",
        "-B",
        "${fileDirname}/build",
        "-DCMAKE_VERBOSE_MAKEFILE=1",
        "-DCMAKE_INSTALL_PREFIX=${fileDirname}/build/cmake-install",
        "-DCMAKE_BUILD_TYPE=Release",
        "-DCMAKE_C_COMPILER=clang",
        "-DCMAKE_CXX_COMPILER=clang++",
        // "-DCMAKE_C_FLAGS=\"-g -O0\"",
        // "-DCMAKE_CXX_FLAGS=\"-g -O0\"",
        "-DCMAKE_C_FLAGS=\"-g -O0 -save-temps=obj\"",
        "-DCMAKE_CXX_FLAGS=\"-g -O0 -save-temps=obj\"",
        // "-DCMAKE_C_FLAGS=\"-g -O0 -S -masm=intel -save-temps=obj\"",
        // "-DCMAKE_CXX_FLAGS=\"-g -O0 -S -masm=intel -save-temps=obj\"",
        "&&",
        "cmake",
        "--build",
        "${fileDirname}/build",
        "&&",
        "cmake",
        "--install",
        "${fileDirname}/build",
        "&&",
        "${workspaceFolder}\\.vscode\\bin\\signtool.exe",
        "sign","/f","${workspaceFolder}\\.vscode\\bin\\certificate.pfx","/p","${env:PASS}",
        "/tr","http://timestamp.digicert.com","/td","SHA256", "${workspaceFolder}/build/*.exe",
        "&&",
        "echo",
        "Cmake Success!!!!!!!!!!!!!!!!"
      ],
      "windows": {
        "options": {
          "shell": {
            "executable": "cmd.exe",
            "args": [
              "/d",
              "/c",
              "${workspaceFolder}\\.vscode\\bin\\vcvars64.bat",
              "&&"
            ]
          }
        }
      },
      "problemMatcher": {
        "owner": "$gcc",
        "fileLocation": "absolute",
        "pattern": {
          "regexp": "^(.*):(\\d+):(\\d+):\\s+(.*):\\s+(.*)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "endLine": 2,
          "endColumn": 3,
          "severity": 4,
          "message": 5
        }
      },
      "dependsOrder": "sequence",
      "dependsOn": [
        // "CLEANUP"
      ],
    },
    {
      "type": "shell",
      "label": "Debug C++",
      "group": "build",
      "command": "clang++",
      // http://solid.kmckk.com/doc/skit/current/solid_toolchain/overview.html
      // https://clang.llvm.org/docs/ClangCommandLineReference.html
      // https://snipsnipsnip.tumblr.com/post/400226078/md-mt-msvcrt-lib-libc-lib-libcmt-lib
      "windows": {
        "args": [
          "-v",
          // "-S",
          // "-masm=intel",
          // "-save-temps=obj",
          "-D_${workspaceFolderBasename}_EXPORTS",
          "-I${env:PYTHONPATH}/include",
          "-I${workspaceFolder}/include",
          "-I${workspaceFolder}/*/include",
          "-I${workspaceFolder}/build/external/include",
          "-I${env:INCLUDE}",
          "-I${workspaceFolder}/${workspaceFolderBasename}/cutil",
          "-I${env:APPROOT}/usr/local/include",
          "-g",
          "-Xclang",
          "-gcodeview",
          "-O0",
          // "-D_DEBUG",
          "-D_DLL",
          "-D_MT",
          "-std=c++17",
          "-Wall",
          "-MD",
          "-MT",
          "${workspaceFolder}/build/${fileBasenameNoExtension}.cpp.obj",
          "-MF",
          "${workspaceFolder}/build/${fileBasenameNoExtension}.cxx.obj.d",
          "-o",
          "${workspaceFolder}/build/${fileBasenameNoExtension}.cpp.obj",
          "-c",
          "${file}",
          "&&",
          "echo",
          "Compier Success!!!!!!!!!!!!!!!!",
          "&&",
          "clang++",
          "-v",
          // "-static",
          // "-pthread",
          "-fuse-ld=lld-link",
          "-nostartfiles",
          "-nostdlib",
          "-g",
          "-Xclang",
          "-gcodeview",
          "-O0",
          // "-D_DEBUG",
          "-D_DLL",
          "-D_MT",
          "-Xclang",
          "--dependent-lib=msvcrt",
          "${workspaceFolder}/build/${fileBasenameNoExtension}.cpp.obj",
          "-o",
          "${workspaceFolder}/build/${fileBasenameNoExtension}.exe",
          "-Xlinker",
          "/implib:${workspaceFolder}/build/${fileBasenameNoExtension}.lib",
          "-Xlinker",
          "/pdb:${workspaceFolder}/build/${fileBasenameNoExtension}.pdb",
          "-Xlinker",
          "/version:0.0",
          "-L${env:IDEROOT}/usr/lib",
          "-L${env:PYTHONPATH}/libs",
          "-L${env:IDEROOT}/usr/local/lib",
          "-L${env:IDEROOT}/lib",
          "-L${env:IDEROOT}/mingw64/lib",
          "-lkernel32",
          "-luser32",
          "-lgdi32",
          "-lwinspool",
          "-lshell32",
          "-lole32",
          "-loleaut32",
          "-luuid",
          "-lcomdlg32",
          "-ladvapi32",
          "-lmsvcrt",
          "-lmsvcprt",
          "-loldnames",
          "&&",
          "echo",
          "Linker Success!!!!!!!!!!!!!!!!"
        ],
      },
      "args": [
        "-v",
        // "-S",
        // "-masm=intel",
        "-save-temps=obj",
        "-D_${workspaceFolderBasename}_EXPORTS",
        "-g",
        "-O0",
        "-D_DEBUG",
        "-std=gnu++17",
        "-Wall",
        "-fstack-protector-strong",
        "-Wformat",
        "-Werror=format-security",
        "-Wdate-time",
        "-D_FORTIFY_SOURCE=2",
        "-I/usr/local/include",
        "-I/usr/include",
        "-I/usr/include/python3.9m",
        "-I/usr/include/python3.8m",
        "-I/usr/include/python3.7m",
        "-I/usr/include/python3.6m",
        "-I/usr/include/python2.7m",
        "-I/usr/include/boost",
        "-MD",
        "-MT",
        "${workspaceFolder}/build/${fileBasenameNoExtension}.cpp.o",
        "-MF",
        "${workspaceFolder}/build/${fileBasenameNoExtension}.cpp.o.d",
        "-o",
        "${workspaceFolder}/build/${fileBasenameNoExtension}.cpp.o",
        "-c",
        "${file}",
        "&&",
        "echo",
        "Compiler Sucess!!!!!!!!!!!!!",
        "&&",
        "clang++",
        "-v",
        "-g",
        "-O0",
        "-D_DEBUG",
        "-Wall",
        "-fstack-protector-strong",
        "-Wformat",
        "-Werror=format-security",
        "-Wdate-time",
        "-D_FORTIFY_SOURCE=2",
        "${workspaceFolder}/build/${fileBasenameNoExtension}.cpp.o",
        "/usr/lib/x86_64-linux-gnu/libpython3.6m.so",
        "-o",
        "${workspaceFolder}/build/${fileBasenameNoExtension}",
        "/usr/lib/x86_64-linux-gnu/libpython3.6m.so",
        "&&",
        "echo",
        "Linker Sucess!!!!!!!!!!!!!"
      ],
      "dependsOrder": "sequence",
      "dependsOn": [
        "pre_makedir"
      ],
    },
    {
      "type": "shell",
      "label": "Release C++",
      "group": "build",
      "command": "clang++",
      // http://solid.kmckk.com/doc/skit/current/solid_toolchain/overview.html
      // https://clang.llvm.org/docs/ClangCommandLineReference.html
      "windows": {
        "args": [
          "-v",
          // "-S",
          // "-masm=intel",
          "-save-temps=obj",
          "-D_${workspaceFolderBasename}_EXPORTS",
          "-I${workspaceFolder}/include",
          "-I${env:PYTHONPATH}/include",
          "-I${workspaceFolder}/extern/*/",
          "-I${workspaceFolder}/extern/*/include",
          "-I${env:INCLUDE}",
          "-I${workspaceFolder}/${workspaceFolderBasename}/cutil",
          "-I${env:APPROOT}/usr/local/include",
          "-g",
          "-Xclang",
          "-gcodeview",
          // "-D_DEBUG", // <- require
          "-O2",
          "-D_DLL",
          "-D_MT",
          "-Xclang",
          "--dependent-lib=msvcrtd",
          "-std=c++17",
          "-Wall",
          "-MD",
          "-MT",
          "${workspaceFolder}/build/${fileBasenameNoExtension}.cpp.obj",
          "-MF",
          "${workspaceFolder}/build/${fileBasenameNoExtension}.cxx.obj.d",
          "-o",
          "${workspaceFolder}/build/${fileBasenameNoExtension}.cpp.obj",
          "-c",
          "${file}",
          "&&",
          "echo",
          "Compier Success!!!!!!!!!!!!!!!!",
          "&&",
          "clang++",
          "-v",
          "-fuse-ld=lld-link",
          "-nostartfiles",
          "-nostdlib",
          "-g",
          "-Xclang",
          "-gcodeview",
          "-O2",
          "-D_DLL",
          "-D_MT",
          "-Xclang",
          "--dependent-lib=msvcrt",
          "${workspaceFolder}/build/${fileBasenameNoExtension}.cpp.obj",
          "-o",
          "${workspaceFolder}/build/${fileBasenameNoExtension}.exe",
          "-Xlinker",
          "/implib:${workspaceFolder}/build/${fileBasenameNoExtension}.lib",
          "-Xlinker",
          "/pdb:${workspaceFolder}/build/${fileBasenameNoExtension}.pdb",
          "-Xlinker",
          "/version:0.0",
          "-L${env:IDEROOT}/lib",
          "-L${env:IDEROOT}/usr/lib",
          "-L${env:PYTHONPATH}/libs",
          "-L${env:IDEROOT}/usr/local/lib",
          "-L${env:IDEROOT}/mingw64/lib",
          "-lkernel32",
          "-luser32",
          "-lgdi32",
          "-lwinspool",
          "-lshell32",
          "-lole32",
          "-loleaut32",
          "-luuid",
          "-lcomdlg32",
          "-ladvapi32",
          "-lmsvcrt",
          "-lmsvcprt",
          "-loldnames",
          "&&",
          "${workspaceFolder}\\.vscode\\bin\\signtool.exe",
          "sign","/f","${workspaceFolder}\\.vscode\\bin\\certificate.pfx","/p","${env:PASS}",
          "/tr","http://timestamp.digicert.com","/td","SHA256", "${workspaceFolder}/build/*.exe",
          "&&",
          "echo",
          "Linker Success!!!!!!!!!!!!!!!!"
        ],
      },
      "args": [
        "-v",
        // "-S",
        // "-masm=intel",
        "-save-temps=obj",
        "-D_${workspaceFolderBasename}_EXPORTS",
        "-g",
        "-D_DEBUG", // <- require
        "-O2",
        "-std=gnu++17",
        "-Wall",
        "-fstack-protector-strong",
        "-Wformat",
        "-Werror=format-security",
        "-Wdate-time",
        "-D_FORTIFY_SOURCE=2",
        "-I/usr/local/include",
        "-I/usr/include",
        "-I/usr/include/python3.9m",
        "-I/usr/include/python3.8m",
        "-I/usr/include/python3.7m",
        "-I/usr/include/python3.6m",
        "-I/usr/include/python2.7m",
        "-I/usr/include/boost",
        "-MD",
        "-MT",
        "${workspaceFolder}/build/${fileBasenameNoExtension}.cpp.o",
        "-MF",
        "${workspaceFolder}/build/${fileBasenameNoExtension}.cpp.o.d",
        "-o",
        "${workspaceFolder}/build/${fileBasenameNoExtension}.cpp.o",
        "-c",
        "${file}",
        "&&",
        "echo",
        "Compiler Sucess!!!!!!!!!!!!!",
        "&&",
        "clang++",
        "-v",
        "-g",
        "-O2",
        "-Wall",
        "-fstack-protector-strong",
        "-Wformat",
        "-Werror=format-security",
        "-Wdate-time",
        "-D_FORTIFY_SOURCE=2",
        "${workspaceFolder}/build/${fileBasenameNoExtension}.cpp.o",
        "/usr/lib/x86_64-linux-gnu/libpython3.6m.so",
        "-o",
        "${workspaceFolder}/build/${fileBasenameNoExtension}",
        "/usr/lib/x86_64-linux-gnu/libpython3.6m.so",
        "&&",
        "echo",
        "Linker Sucess!!!!!!!!!!!!!"
      ],
      "dependsOrder": "sequence",
      "dependsOn": [
        "pre_makedir"
      ],
    },
    {
      "type": "process",
      "label": "Debug Setup.py",
      "group": "build",
      "command": "python3",
      "windows": {
        "command": "python"
      },
      "args": [
        "setup.py",
        "build",
        "-gf"
      ],
      "dependsOrder": "sequence",
      "dependsOn": [
        // "CLEANUP"
      ],
    },
    {
      "type": "process",
      "label": "Release Setup.py",
      "group": "build",
      "command": "python3",
      "windows": {
        "command": "python"
      },
      "args": [
        "setup.py",
        "build"
      ],
      "dependsOrder": "sequence",
      "dependsOn": [
        // "CLEANUP"
      ],
    },
  ]
}
